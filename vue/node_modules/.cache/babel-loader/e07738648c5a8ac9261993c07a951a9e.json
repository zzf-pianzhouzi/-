{"ast":null,"code":"import request from \"@/utils/request\";\nexport default {\n  name: 'Book',\n  components: {},\n\n  data() {\n    return {\n      user: {},\n      loading: true,\n      form: {},\n      dialogVisible: false,\n      search: '',\n      currentPage: 1,\n      pageSize: 10,\n      total: 0,\n      tableData: [],\n      filesUploadUrl: \"http://\" + window.server.filesUploadUrl + \":9090/files/upload\",\n      ids: []\n    };\n  },\n\n  created() {\n    let userStr = sessionStorage.getItem(\"user\") || \"{}\";\n    this.user = JSON.parse(userStr); // 请求服务端，确认当前登录用户的 合法信息\n\n    request.get(\"/user/\" + this.user.id).then(res => {\n      if (res.code === '0') {\n        this.user = res.data;\n      }\n    });\n    this.load();\n  },\n\n  methods: {\n    buy(bookId) {\n      request.get(\"/order/buy/\" + bookId).then(res => {\n        // 请求成功跳转沙箱支付的页面\n        window.open(res.data);\n      });\n    },\n\n    deleteBatch() {\n      if (!this.ids.length) {\n        this.$message.warning(\"请选择数据！\");\n        return;\n      }\n\n      request.post(\"/book/deleteBatch\", this.ids).then(res => {\n        if (res.code === '0') {\n          this.$message.success(\"批量删除成功\");\n          this.load();\n        } else {\n          this.$message.error(res.msg);\n        }\n      });\n    },\n\n    handleSelectionChange(val) {\n      this.ids = val.map(v => v.id); // [{id,name}, {id,name}] => [id,id]\n    },\n\n    filesUploadSuccess(res) {\n      console.log(res);\n      this.form.cover = res.data;\n    },\n\n    load() {\n      this.loading = true;\n      request.get(\"/book\", {\n        params: {\n          pageNum: this.currentPage,\n          pageSize: this.pageSize,\n          search: this.search\n        }\n      }).then(res => {\n        this.loading = false;\n        this.tableData = res.data.records;\n        this.total = res.data.total;\n      });\n    },\n\n    add() {\n      this.dialogVisible = true;\n      this.form = {};\n\n      if (this.$refs['upload']) {\n        this.$refs['upload'].clearFiles(); // 清除历史文件列表\n      }\n    },\n\n    save() {\n      if (this.form.id) {\n        // 更新\n        request.put(\"/book\", this.form).then(res => {\n          console.log(res);\n\n          if (res.code === '0') {\n            this.$message({\n              type: \"success\",\n              message: \"更新成功\"\n            });\n          } else {\n            this.$message({\n              type: \"error\",\n              message: res.msg\n            });\n          }\n\n          this.load(); // 刷新表格的数据\n\n          this.dialogVisible = false; // 关闭弹窗\n        });\n      } else {\n        // 新增\n        request.post(\"/book\", this.form).then(res => {\n          console.log(res);\n\n          if (res.code === '0') {\n            this.$message({\n              type: \"success\",\n              message: \"新增成功\"\n            });\n          } else {\n            this.$message({\n              type: \"error\",\n              message: res.msg\n            });\n          }\n\n          this.load(); // 刷新表格的数据\n\n          this.dialogVisible = false; // 关闭弹窗\n        });\n      }\n    },\n\n    handleEdit(row) {\n      this.form = JSON.parse(JSON.stringify(row));\n      this.dialogVisible = true;\n      this.$nextTick(() => {\n        if (this.$refs['upload']) {\n          this.$refs['upload'].clearFiles(); // 清除历史文件列表\n        }\n      });\n    },\n\n    handleDelete(id) {\n      console.log(id);\n      request.delete(\"/book/\" + id).then(res => {\n        if (res.code === '0') {\n          this.$message({\n            type: \"success\",\n            message: \"删除成功\"\n          });\n        } else {\n          this.$message({\n            type: \"error\",\n            message: res.msg\n          });\n        }\n\n        this.load(); // 删除之后重新加载表格的数据\n      });\n    },\n\n    handleSizeChange(pageSize) {\n      // 改变当前每页的个数触发\n      this.pageSize = pageSize;\n      this.load();\n    },\n\n    handleCurrentChange(pageNum) {\n      // 改变当前页码触发\n      this.currentPage = pageNum;\n      this.load();\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["request","name","components","data","user","loading","form","dialogVisible","search","currentPage","pageSize","total","tableData","filesUploadUrl","window","server","ids","created","userStr","sessionStorage","getItem","JSON","parse","get","id","then","res","code","load","methods","buy","bookId","open","deleteBatch","length","$message","warning","post","success","error","msg","handleSelectionChange","val","map","v","filesUploadSuccess","console","log","cover","params","pageNum","records","add","$refs","clearFiles","save","put","type","message","handleEdit","row","stringify","$nextTick","handleDelete","delete","handleSizeChange","handleCurrentChange"],"sourceRoot":"","sources":["D:\\Desktop\\springboot+vue\\springboot-vue-demo\\src\\views\\Book.vue"],"sourcesContent":["<template>\n  <div style=\"padding: 10px\">\n    <!--    功能区域-->\n    <div style=\"margin: 10px 0\">\n      <el-button type=\"primary\" @click=\"add\" v-if=\"user.role === 1\">新增</el-button>\n      <el-popconfirm\n          v-if=\"user.role === 1\"\n          title=\"确定删除吗？\"\n          @confirm=\"deleteBatch\"\n      >\n        <template #reference>\n          <el-button type=\"danger\" >批量删除</el-button>\n        </template>\n      </el-popconfirm>\n\n    </div>\n\n    <!--    搜索区域-->\n    <div style=\"margin: 10px 0\">\n      <el-input v-model=\"search\" placeholder=\"请输入关键字\" style=\"width: 20%\" clearable></el-input>\n      <el-button type=\"primary\" style=\"margin-left: 5px\" @click=\"load\">查询</el-button>\n    </div>\n    <el-table\n        v-loading=\"loading\"\n        :data=\"tableData\"\n        border\n        stripe\n        style=\"width: 100%\"\n        @selection-change=\"handleSelectionChange\"\n    >\n      <el-table-column\n          type=\"selection\"\n          width=\"55\">\n      </el-table-column>\n      <el-table-column\n          prop=\"id\"\n          label=\"ID\"\n          sortable\n      >\n      </el-table-column>\n      <el-table-column\n          prop=\"name\"\n          label=\"名称\">\n      </el-table-column>\n      <el-table-column\n          prop=\"price\"\n          label=\"单价\">\n      </el-table-column>\n      <el-table-column\n          prop=\"author\"\n          label=\"作者\">\n      </el-table-column>\n      <el-table-column\n          prop=\"createTime\"\n          label=\"出版时间\">\n      </el-table-column>\n      <el-table-column\n          label=\"封面\">\n        <template #default=\"scope\">\n          <el-image\n              style=\"width: 100px; height: 100px\"\n              :src=\"scope.row.cover\"\n              :preview-src-list=\"[scope.row.cover]\">\n          </el-image>\n        </template>\n      </el-table-column>\n      <el-table-column label=\"操作\" width=\"240\">\n        <template #default=\"scope\">\n          <el-button type=\"primary\" size=\"mini\" @click=\"buy(scope.row.id)\">购买</el-button>\n          <el-button size=\"mini\" @click=\"handleEdit(scope.row)\" v-if=\"user.role === 1\">编辑</el-button>\n          <el-popconfirm title=\"确定删除吗？\" @confirm=\"handleDelete(scope.row.id)\" v-if=\"user.role === 1\">\n            <template #reference>\n              <el-button size=\"mini\" type=\"danger\">删除</el-button>\n            </template>\n          </el-popconfirm>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <div style=\"margin: 10px 0\">\n      <el-pagination\n          @size-change=\"handleSizeChange\"\n          @current-change=\"handleCurrentChange\"\n          :current-page=\"currentPage\"\n          :page-sizes=\"[5, 10, 20]\"\n          :page-size=\"pageSize\"\n          layout=\"total, sizes, prev, pager, next, jumper\"\n          :total=\"total\">\n      </el-pagination>\n\n      <el-dialog title=\"提示\" v-model=\"dialogVisible\" width=\"30%\">\n        <el-form :model=\"form\" label-width=\"120px\">\n          <el-form-item label=\"名称\">\n            <el-input v-model=\"form.name\" style=\"width: 80%\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"价格\">\n            <el-input v-model=\"form.price\" style=\"width: 80%\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"作者\">\n            <el-input v-model=\"form.author\" style=\"width: 80%\"></el-input>\n          </el-form-item>\n          <el-form-item label=\"出版时间\">\n            <el-date-picker v-model=\"form.createTime\" value-format=\"YYYY-MM-DD\" type=\"date\" style=\"width: 80%\" clearable></el-date-picker>\n          </el-form-item>\n          <el-form-item label=\"封面\">\n            <el-upload ref=\"upload\" :action=\"filesUploadUrl\" :on-success=\"filesUploadSuccess\">\n              <el-button type=\"primary\">点击上传</el-button>\n            </el-upload>\n          </el-form-item>\n        </el-form>\n        <template #footer>\n          <span class=\"dialog-footer\">\n            <el-button @click=\"dialogVisible = false\">取 消</el-button>\n            <el-button type=\"primary\" @click=\"save\">确 定</el-button>\n          </span>\n        </template>\n      </el-dialog>\n\n    </div>\n  </div>\n</template>\n\n<script>\n\n\nimport request from \"@/utils/request\";\n\nexport default {\n  name: 'Book',\n  components: {\n\n  },\n  data() {\n    return {\n      user: {},\n      loading: true,\n      form: {},\n      dialogVisible: false,\n      search: '',\n      currentPage: 1,\n      pageSize: 10,\n      total: 0,\n      tableData: [],\n      filesUploadUrl: \"http://\" + window.server.filesUploadUrl + \":9090/files/upload\",\n      ids: []\n    }\n  },\n  created() {\n    let userStr = sessionStorage.getItem(\"user\") || \"{}\"\n    this.user = JSON.parse(userStr)\n    // 请求服务端，确认当前登录用户的 合法信息\n    request.get(\"/user/\" + this.user.id).then(res => {\n      if (res.code === '0') {\n        this.user = res.data\n      }\n    })\n\n    this.load()\n  },\n  methods: {\n    buy(bookId) {\n      request.get(\"/order/buy/\" + bookId).then(res => {\n        // 请求成功跳转沙箱支付的页面\n        window.open(res.data)\n      })\n    },\n    deleteBatch() {\n      if (!this.ids.length) {\n        this.$message.warning(\"请选择数据！\")\n        return\n      }\n      request.post(\"/book/deleteBatch\", this.ids).then(res => {\n        if (res.code === '0') {\n          this.$message.success(\"批量删除成功\")\n          this.load()\n        } else {\n          this.$message.error(res.msg)\n        }\n      })\n    },\n    handleSelectionChange(val) {\n      this.ids = val.map(v => v.id)   // [{id,name}, {id,name}] => [id,id]\n    },\n    filesUploadSuccess(res) {\n      console.log(res)\n      this.form.cover = res.data\n    },\n    load() {\n      this.loading = true\n      request.get(\"/book\", {\n        params: {\n          pageNum: this.currentPage,\n          pageSize: this.pageSize,\n          search: this.search\n        }\n      }).then(res => {\n        this.loading = false\n        this.tableData = res.data.records\n        this.total = res.data.total\n      })\n    },\n    add() {\n      this.dialogVisible = true\n      this.form = {}\n      if (this.$refs['upload']) {\n        this.$refs['upload'].clearFiles()  // 清除历史文件列表\n      }\n    },\n    save() {\n      if (this.form.id) {  // 更新\n        request.put(\"/book\", this.form).then(res => {\n          console.log(res)\n          if (res.code === '0') {\n            this.$message({\n              type: \"success\",\n              message: \"更新成功\"\n            })\n          } else {\n            this.$message({\n              type: \"error\",\n              message: res.msg\n            })\n          }\n          this.load() // 刷新表格的数据\n          this.dialogVisible = false  // 关闭弹窗\n        })\n      }  else {  // 新增\n        request.post(\"/book\", this.form).then(res => {\n          console.log(res)\n          if (res.code === '0') {\n            this.$message({\n              type: \"success\",\n              message: \"新增成功\"\n            })\n          } else {\n            this.$message({\n              type: \"error\",\n              message: res.msg\n            })\n          }\n\n          this.load() // 刷新表格的数据\n          this.dialogVisible = false  // 关闭弹窗\n        })\n      }\n    },\n    handleEdit(row) {\n      this.form = JSON.parse(JSON.stringify(row))\n      this.dialogVisible = true\n      this.$nextTick(() => {\n        if (this.$refs['upload']) {\n          this.$refs['upload'].clearFiles()  // 清除历史文件列表\n        }\n      })\n\n    },\n    handleDelete(id) {\n      console.log(id)\n      request.delete(\"/book/\" + id).then(res => {\n        if (res.code === '0') {\n          this.$message({\n            type: \"success\",\n            message: \"删除成功\"\n          })\n        } else {\n          this.$message({\n            type: \"error\",\n            message: res.msg\n          })\n        }\n        this.load()  // 删除之后重新加载表格的数据\n      })\n    },\n    handleSizeChange(pageSize) {   // 改变当前每页的个数触发\n      this.pageSize = pageSize\n      this.load()\n    },\n    handleCurrentChange(pageNum) {  // 改变当前页码触发\n      this.currentPage = pageNum\n      this.load()\n    }\n  }\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}