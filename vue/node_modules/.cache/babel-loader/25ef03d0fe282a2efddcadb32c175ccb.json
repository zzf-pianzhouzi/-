{"ast":null,"code":"import request from \"@/utils/request\";\nexport default {\n  name: 'Category',\n  components: {},\n\n  data() {\n    return {\n      user: {},\n      loading: true,\n      form: {},\n      dialogVisible: false,\n      search: '',\n      currentPage: 1,\n      pageSize: 10,\n      total: 0,\n      tableData: [],\n      casdata: ['Anhui', 'Hefei', 'Zhengwu'],\n      defaultProps: {\n        children: 'children',\n        label: 'name'\n      },\n      checkedList: [],\n      options: []\n    };\n  },\n\n  // {\n  //   value: 'Anhui',\n  //       label: '安徽省',\n  //     children: [\n  //   {\n  //     value: 'Hefei',\n  //     label: '合肥市',\n  //     children: [\n  //       {\n  //         value: 'Zhenwu',\n  //         label: '政务区',\n  //       },\n  //     ],\n  //   },\n  //   {\n  //     value: 'Wuhu',\n  //     label: '芜湖市',\n  //     children: [\n  //       {\n  //         value: 'Jinghu',\n  //         label: '镜湖区',\n  //       },\n  //     ],\n  //   }\n  // ]\n  // },\n  // {\n  //   value: 'Jiangsu',\n  //       label: '江苏省',\n  //     children: [\n  //   {\n  //     value: 'Nanjing',\n  //     label: '南京市',\n  //     children: [\n  //       {\n  //         value: 'Xuanwu',\n  //         label: '玄武区',\n  //       },\n  //     ],\n  //   }\n  // ]\n  // }\n  created() {\n    let userStr = sessionStorage.getItem(\"user\") || \"{}\";\n    this.user = JSON.parse(userStr); // 请求服务端，确认当前登录用户的 合法信息\n\n    request.get(\"/user/\" + this.user.id).then(res => {\n      if (res.code === '0') {\n        this.user = res.data;\n      }\n    });\n    request.get(\"/area/tree\").then(res => {\n      console.log(res.data);\n      this.options = res.data;\n    });\n    this.load();\n  },\n\n  methods: {\n    changeCas(data) {\n      console.log(data);\n      console.log(this.casdata);\n    },\n\n    remove(node, data) {\n      request.delete(\"/category/\" + data.id).then(res => {\n        this.load();\n      }); // console.log(data)\n      // const parent = node.parent;\n      // const children = parent.data.children || parent.data;\n      // const index = children.findIndex(d => d.id === data.id);\n      // children.splice(index, 1);\n      // this.data = [...this.data]\n    },\n\n    handleCheckChange(data, checked, indeterminate) {\n      console.log(data.id);\n      console.log(data.name);\n    },\n\n    load() {\n      this.loading = true;\n      request.get(\"/category\").then(res => {\n        this.loading = false;\n        this.tableData = res.data; // 赋值选中的节点\n\n        let checkedData = [4];\n        this.checkedList = checkedData;\n      });\n    },\n\n    add() {\n      this.dialogVisible = true;\n      this.form = {};\n    },\n\n    save() {\n      if (this.form.id) {\n        // 更新\n        request.put(\"/category\", this.form).then(res => {\n          console.log(res);\n\n          if (res.code === '0') {\n            this.$message({\n              type: \"success\",\n              message: \"更新成功\"\n            });\n          } else {\n            this.$message({\n              type: \"error\",\n              message: res.msg\n            });\n          }\n\n          this.load(); // 刷新表格的数据\n\n          this.dialogVisible = false; // 关闭弹窗\n        });\n      } else {\n        // 新增\n        request.post(\"/category\", this.form).then(res => {\n          console.log(res);\n\n          if (res.code === '0') {\n            this.$message({\n              type: \"success\",\n              message: \"新增成功\"\n            });\n          } else {\n            this.$message({\n              type: \"error\",\n              message: res.msg\n            });\n          }\n\n          this.load(); // 刷新表格的数据\n\n          this.dialogVisible = false; // 关闭弹窗\n        });\n      }\n    },\n\n    handleEdit(row) {\n      this.form = JSON.parse(JSON.stringify(row));\n      this.dialogVisible = true;\n    },\n\n    handleDelete(id) {\n      console.log(id);\n      request.delete(\"/category/\" + id).then(res => {\n        if (res.code === '0') {\n          this.$message({\n            type: \"success\",\n            message: \"删除成功\"\n          });\n        } else {\n          this.$message({\n            type: \"error\",\n            message: res.msg\n          });\n        }\n\n        this.load(); // 删除之后重新加载表格的数据\n      });\n    },\n\n    handleSizeChange(pageSize) {\n      // 改变当前每页的个数触发\n      this.pageSize = pageSize;\n      this.load();\n    },\n\n    handleCurrentChange(pageNum) {\n      // 改变当前页码触发\n      this.currentPage = pageNum;\n      this.load();\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["request","name","components","data","user","loading","form","dialogVisible","search","currentPage","pageSize","total","tableData","casdata","defaultProps","children","label","checkedList","options","created","userStr","sessionStorage","getItem","JSON","parse","get","id","then","res","code","console","log","load","methods","changeCas","remove","node","delete","handleCheckChange","checked","indeterminate","checkedData","add","save","put","$message","type","message","msg","post","handleEdit","row","stringify","handleDelete","handleSizeChange","handleCurrentChange","pageNum"],"sourceRoot":"","sources":["D:\\Desktop\\springboot+vue\\springboot-vue-demo\\src\\views\\Category.vue"],"sourcesContent":["<template>\n  <div style=\"padding: 10px\">\n    <!--    功能区域-->\n<!--    <div style=\"margin: 10px 0\">-->\n<!--      <el-button type=\"primary\" @click=\"add\" v-if=\"user.role === 1\">新增</el-button>-->\n<!--    </div>-->\n\n    <!--    搜索区域-->\n<!--    <div style=\"margin: 10px 0\">-->\n<!--      <el-input v-model=\"search\" placeholder=\"请输入关键字\" style=\"width: 20%\" clearable></el-input>-->\n<!--      <el-button type=\"primary\" style=\"margin-left: 5px\" @click=\"load\">查询</el-button>-->\n<!--    </div>-->\n    <el-table\n        v-loading=\"loading\"\n        :data=\"tableData\"\n        border\n        stripe\n        style=\"width: 100%\"\n        row-key=\"id\"\n        default-expand-all\n    >\n<!--      <el-table-column-->\n<!--          prop=\"id\"-->\n<!--          label=\"ID\"-->\n<!--          sortable-->\n<!--      >-->\n<!--      </el-table-column>-->\n      <el-table-column\n          prop=\"name\"\n          label=\"名称\">\n      </el-table-column>\n      <el-table-column label=\"操作\">\n        <template #default=\"scope\">\n          <el-button size=\"mini\" @click=\"handleEdit(scope.row)\" v-if=\"user.role === 1\">编辑</el-button>\n          <el-popconfirm title=\"确定删除吗？\" @confirm=\"handleDelete(scope.row.id)\" v-if=\"user.role === 1\">\n            <template #reference>\n              <el-button size=\"mini\" type=\"danger\">删除</el-button>\n            </template>\n          </el-popconfirm>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <el-card style=\"margin: 10px 0; width: 50%\">\n      <div class=\"custom-tree-container\">\n        <el-tree :data=\"tableData\" :props=\"defaultProps\" show-checkbox\n                 @check-change=\"handleCheckChange\"\n                 node-key=\"id\"\n                 :default-expanded-keys=\"[1, 2]\"\n                 :default-checked-keys=\"checkedList\"\n        >\n          <template #default=\"{ node, data }\">\n        <span class=\"custom-tree-node\">\n          <span>{{ node.label }}</span>\n          <span>\n            <a\n                @click=\"remove(node, data)\">\n              Delete\n            </a>\n          </span>\n        </span>\n          </template>\n        </el-tree>\n      </div>\n    </el-card>\n\n    <el-card style=\"width: 50%\">\n      <el-cascader :options=\"options\" clearable @change=\"changeCas\" v-model=\"casdata\"></el-cascader>\n    </el-card>\n\n    <div style=\"margin: 10px 0\">\n      <el-dialog title=\"提示\" v-model=\"dialogVisible\" width=\"30%\">\n        <el-form :model=\"form\" label-width=\"120px\">\n          <el-form-item label=\"名称\">\n            <el-input v-model=\"form.name\" style=\"width: 80%\"></el-input>\n          </el-form-item>\n        </el-form>\n        <template #footer>\n          <span class=\"dialog-footer\">\n            <el-button @click=\"dialogVisible = false\">取 消</el-button>\n            <el-button type=\"primary\" @click=\"save\">确 定</el-button>\n          </span>\n        </template>\n      </el-dialog>\n\n    </div>\n  </div>\n</template>\n\n<script>\n\n\nimport request from \"@/utils/request\";\n\nexport default {\n  name: 'Category',\n  components: {\n\n  },\n  data() {\n    return {\n      user: {},\n      loading: true,\n      form: {},\n      dialogVisible: false,\n      search: '',\n      currentPage: 1,\n      pageSize: 10,\n      total: 0,\n      tableData: [],\n      casdata: ['Anhui', 'Hefei', 'Zhengwu'],\n      defaultProps: {\n        children: 'children',\n        label: 'name'\n      },\n      checkedList: [],\n      options: []\n    }\n  },\n\n// {\n//   value: 'Anhui',\n//       label: '安徽省',\n//     children: [\n//   {\n//     value: 'Hefei',\n//     label: '合肥市',\n//     children: [\n//       {\n//         value: 'Zhenwu',\n//         label: '政务区',\n//       },\n//     ],\n//   },\n//   {\n//     value: 'Wuhu',\n//     label: '芜湖市',\n//     children: [\n//       {\n//         value: 'Jinghu',\n//         label: '镜湖区',\n//       },\n//     ],\n//   }\n// ]\n// },\n// {\n//   value: 'Jiangsu',\n//       label: '江苏省',\n//     children: [\n//   {\n//     value: 'Nanjing',\n//     label: '南京市',\n//     children: [\n//       {\n//         value: 'Xuanwu',\n//         label: '玄武区',\n//       },\n//     ],\n//   }\n// ]\n// }\n  created() {\n    let userStr = sessionStorage.getItem(\"user\") || \"{}\"\n    this.user = JSON.parse(userStr)\n    // 请求服务端，确认当前登录用户的 合法信息\n    request.get(\"/user/\" + this.user.id).then(res => {\n      if (res.code === '0') {\n        this.user = res.data\n      }\n    })\n\n    request.get(\"/area/tree\").then(res => {\n      console.log(res.data)\n      this.options = res.data\n    })\n\n    this.load()\n  },\n  methods: {\n    changeCas(data) {\n      console.log(data)\n      console.log(this.casdata)\n    },\n    remove(node, data) {\n      request.delete(\"/category/\" + data.id).then(res => {\n        this.load()\n      })\n      // console.log(data)\n      // const parent = node.parent;\n      // const children = parent.data.children || parent.data;\n      // const index = children.findIndex(d => d.id === data.id);\n      // children.splice(index, 1);\n      // this.data = [...this.data]\n    },\n    handleCheckChange(data, checked, indeterminate) {\n      console.log(data.id);\n      console.log(data.name);\n    },\n    load() {\n      this.loading = true\n      request.get(\"/category\").then(res => {\n        this.loading = false\n        this.tableData = res.data\n\n        // 赋值选中的节点\n        let checkedData = [4];\n        this.checkedList = checkedData\n      })\n\n    },\n    add() {\n      this.dialogVisible = true\n      this.form = {}\n    },\n    save() {\n      if (this.form.id) {  // 更新\n        request.put(\"/category\", this.form).then(res => {\n          console.log(res)\n          if (res.code === '0') {\n            this.$message({\n              type: \"success\",\n              message: \"更新成功\"\n            })\n          } else {\n            this.$message({\n              type: \"error\",\n              message: res.msg\n            })\n          }\n          this.load() // 刷新表格的数据\n          this.dialogVisible = false  // 关闭弹窗\n        })\n      }  else {  // 新增\n        request.post(\"/category\", this.form).then(res => {\n          console.log(res)\n          if (res.code === '0') {\n            this.$message({\n              type: \"success\",\n              message: \"新增成功\"\n            })\n          } else {\n            this.$message({\n              type: \"error\",\n              message: res.msg\n            })\n          }\n\n          this.load() // 刷新表格的数据\n          this.dialogVisible = false  // 关闭弹窗\n        })\n      }\n    },\n    handleEdit(row) {\n      this.form = JSON.parse(JSON.stringify(row))\n      this.dialogVisible = true\n\n    },\n    handleDelete(id) {\n      console.log(id)\n      request.delete(\"/category/\" + id).then(res => {\n        if (res.code === '0') {\n          this.$message({\n            type: \"success\",\n            message: \"删除成功\"\n          })\n        } else {\n          this.$message({\n            type: \"error\",\n            message: res.msg\n          })\n        }\n        this.load()  // 删除之后重新加载表格的数据\n      })\n    },\n    handleSizeChange(pageSize) {   // 改变当前每页的个数触发\n      this.pageSize = pageSize\n      this.load()\n    },\n    handleCurrentChange(pageNum) {  // 改变当前页码触发\n      this.currentPage = pageNum\n      this.load()\n    }\n  }\n}\n</script>\n<style>\n.custom-tree-node {\n  flex: 1;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: 14px;\n  padding-right: 8px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}