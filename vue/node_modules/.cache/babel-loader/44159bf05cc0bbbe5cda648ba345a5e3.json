{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'ValidCode',\n  model: {\n    prop: 'value',\n    event: 'input'\n  },\n  props: {\n    width: {\n      type: String,\n      default: '100px'\n    },\n    height: {\n      type: String,\n      default: '40px'\n    },\n    length: {\n      type: Number,\n      default: 4\n    },\n    refresh: {\n      type: Number\n    }\n  },\n\n  data() {\n    return {\n      codeList: []\n    };\n  },\n\n  watch: {\n    refresh() {\n      this.createdCode();\n    }\n\n  },\n\n  mounted() {\n    this.createdCode();\n  },\n\n  methods: {\n    refreshCode() {\n      this.createdCode();\n    },\n\n    createdCode() {\n      const len = this.length;\n      const codeList = [];\n      const chars = 'ABCDEFGHJKMNPQRSTWXYZabcdefhijkmnprstwxyz0123456789';\n      const charsLen = chars.length; // 生成\n\n      for (let i = 0; i < len; i++) {\n        const rgb = [Math.round(Math.random() * 220), Math.round(Math.random() * 240), Math.round(Math.random() * 200)];\n        codeList.push({\n          code: chars.charAt(Math.floor(Math.random() * charsLen)),\n          color: `rgb(${rgb})`,\n          fontSize: `${10 + (+[Math.floor(Math.random() * 10)] + 6)}px`,\n          padding: `${[Math.floor(Math.random() * 10)]}px`,\n          transform: `rotate(${Math.floor(Math.random() * 90) - Math.floor(Math.random() * 90)}deg)`\n        });\n      } // 指向\n\n\n      this.codeList = codeList; // 将当前数据派发出去\n      // console.log(codeList.map(item => item.code).join(''))\n\n      this.$emit('input', codeList.map(item => item.code).join(''));\n    },\n\n    getStyle(data) {\n      return `color: ${data.color}; font-size: ${data.fontSize}; padding: ${data.padding}; transform: ${data.transform}`;\n    }\n\n  }\n};","map":{"version":3,"mappings":";AAeA,eAAe;EACbA,IAAI,EAAE,WADO;EAEbC,KAAK,EAAE;IACLC,IAAI,EAAE,OADD;IAELC,KAAK,EAAE;EAFF,CAFM;EAMbC,KAAK,EAAE;IACLC,KAAK,EAAE;MACLC,IAAI,EAAEC,MADD;MAELC,OAAO,EAAE;IAFJ,CADF;IAKLC,MAAM,EAAE;MACNH,IAAI,EAAEC,MADA;MAENC,OAAO,EAAE;IAFH,CALH;IASLE,MAAM,EAAE;MACNJ,IAAI,EAAEK,MADA;MAENH,OAAO,EAAE;IAFH,CATH;IAaLI,OAAO,EAAE;MACPN,IAAI,EAAEK;IADC;EAbJ,CANM;;EAuBbE,IAAG,GAAK;IACN,OAAO;MACLC,QAAQ,EAAE;IADL,CAAP;EAGD,CA3BY;;EA4BbC,KAAK,EAAE;IACLH,OAAM,GAAK;MACT,KAAKI,WAAL;IACF;;EAHK,CA5BM;;EAiCbC,OAAM,GAAK;IACT,KAAKD,WAAL;EACD,CAnCY;;EAoCbE,OAAO,EAAE;IACPC,WAAU,GAAK;MACb,KAAKH,WAAL;IACD,CAHM;;IAIPA,WAAU,GAAK;MACb,MAAMI,GAAE,GAAI,KAAKV,MAAjB;MACA,MAAMI,QAAO,GAAI,EAAjB;MACA,MAAMO,KAAI,GAAI,qDAAd;MACA,MAAMC,QAAO,GAAID,KAAK,CAACX,MAAvB,CAJa,CAKb;;MACA,KAAK,IAAIa,IAAI,CAAb,EAAgBA,IAAIH,GAApB,EAAyBG,CAAC,EAA1B,EAA8B;QAC5B,MAAMC,GAAE,GAAI,CAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAD,EAAkCF,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAlC,EAAmEF,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,GAA3B,CAAnE,CAAZ;QACAb,QAAQ,CAACc,IAAT,CAAc;UACZC,IAAI,EAAER,KAAK,CAACS,MAAN,CAAaL,IAAI,CAACM,KAAL,CAAWN,IAAI,CAACE,MAAL,KAAgBL,QAA3B,CAAb,CADM;UAEZU,KAAK,EAAG,OAAMR,GAAI,GAFN;UAGZS,QAAQ,EAAG,GAAE,MAAM,CAAC,CAACR,IAAI,CAACM,KAAL,CAAWN,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAD,CAAD,GAAoC,CAA1C,CAA6C,IAH9C;UAIZO,OAAO,EAAG,GAAE,CAACT,IAAI,CAACM,KAAL,CAAWN,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAAD,CAAiC,IAJjC;UAKZQ,SAAS,EAAG,UAASV,IAAI,CAACM,KAAL,CAAWN,IAAI,CAACE,MAAL,KAAgB,EAA3B,IAAiCF,IAAI,CAACM,KAAL,CAAWN,IAAI,CAACE,MAAL,KAAgB,EAA3B,CAA+B;QALzE,CAAd;MAOF,CAfa,CAgBb;;;MACA,KAAKb,QAAL,GAAgBA,QAAhB,CAjBa,CAkBb;MACA;;MACA,KAAKsB,KAAL,CAAW,OAAX,EAAoBtB,QAAQ,CAACuB,GAAT,CAAaC,IAAG,IAAKA,IAAI,CAACT,IAA1B,EAAgCU,IAAhC,CAAqC,EAArC,CAApB;IACD,CAzBM;;IA0BPC,QAAO,CAAG3B,IAAH,EAAS;MACd,OAAQ,UAASA,IAAI,CAACmB,KAAM,gBAAenB,IAAI,CAACoB,QAAS,cAAapB,IAAI,CAACqB,OAAQ,gBAAerB,IAAI,CAACsB,SAAU,EAAjH;IACF;;EA5BO;AApCI,CAAf","names":["name","model","prop","event","props","width","type","String","default","height","length","Number","refresh","data","codeList","watch","createdCode","mounted","methods","refreshCode","len","chars","charsLen","i","rgb","Math","round","random","push","code","charAt","floor","color","fontSize","padding","transform","$emit","map","item","join","getStyle"],"sourceRoot":"","sources":["D:\\Desktop\\springboot+vue\\springboot-vue-demo\\src\\components\\ValidCode.vue"],"sourcesContent":["<template>\n  <div\n      class=\"ValidCode disabled-select\"\n      :style=\"`width:${width}; height:${height}`\"\n      @click=\"refreshCode\"\n  >\n    <span\n        v-for=\"(item, index) in codeList\"\n        :key=\"index\"\n        :style=\"getStyle(item)\"\n    >{{ item.code }}</span>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'ValidCode',\n  model: {\n    prop: 'value',\n    event: 'input'\n  },\n  props: {\n    width: {\n      type: String,\n      default: '100px'\n    },\n    height: {\n      type: String,\n      default: '40px'\n    },\n    length: {\n      type: Number,\n      default: 4\n    },\n    refresh: {\n      type: Number\n    }\n  },\n  data () {\n    return {\n      codeList: []\n    }\n  },\n  watch: {\n    refresh () {\n      this.createdCode()\n    }\n  },\n  mounted () {\n    this.createdCode()\n  },\n  methods: {\n    refreshCode () {\n      this.createdCode()\n    },\n    createdCode () {\n      const len = this.length\n      const codeList = []\n      const chars = 'ABCDEFGHJKMNPQRSTWXYZabcdefhijkmnprstwxyz0123456789'\n      const charsLen = chars.length\n      // 生成\n      for (let i = 0; i < len; i++) {\n        const rgb = [Math.round(Math.random() * 220), Math.round(Math.random() * 240), Math.round(Math.random() * 200)]\n        codeList.push({\n          code: chars.charAt(Math.floor(Math.random() * charsLen)),\n          color: `rgb(${rgb})`,\n          fontSize: `${10 + (+[Math.floor(Math.random() * 10)] + 6)}px`,\n          padding: `${[Math.floor(Math.random() * 10)]}px`,\n          transform: `rotate(${Math.floor(Math.random() * 90) - Math.floor(Math.random() * 90)}deg)`\n        })\n      }\n      // 指向\n      this.codeList = codeList\n      // 将当前数据派发出去\n      // console.log(codeList.map(item => item.code).join(''))\n      this.$emit('input', codeList.map(item => item.code).join(''))\n    },\n    getStyle (data) {\n      return `color: ${data.color}; font-size: ${data.fontSize}; padding: ${data.padding}; transform: ${data.transform}`\n    }\n  }\n}\n</script>\n\n<style scoped>\n.ValidCode{\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n}\n.ValidCode span{\n  display: inline-block;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}