{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, resolveDirective as _resolveDirective, withDirectives as _withDirectives, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  style: {\n    \"padding\": \"10px\"\n  }\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createTextVNode(\"编辑\");\n\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\"删除\");\n\nconst _hoisted_4 = {\n  class: \"custom-tree-container\"\n};\nconst _hoisted_5 = {\n  class: \"custom-tree-node\"\n};\nconst _hoisted_6 = [\"onClick\"];\nconst _hoisted_7 = {\n  style: {\n    \"margin\": \"10px 0\"\n  }\n};\nconst _hoisted_8 = {\n  class: \"dialog-footer\"\n};\n\nconst _hoisted_9 = /*#__PURE__*/_createTextVNode(\"取 消\");\n\nconst _hoisted_10 = /*#__PURE__*/_createTextVNode(\"确 定\");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n\n  const _component_el_button = _resolveComponent(\"el-button\");\n\n  const _component_el_popconfirm = _resolveComponent(\"el-popconfirm\");\n\n  const _component_el_table = _resolveComponent(\"el-table\");\n\n  const _component_el_tree = _resolveComponent(\"el-tree\");\n\n  const _component_el_card = _resolveComponent(\"el-card\");\n\n  const _component_el_cascader = _resolveComponent(\"el-cascader\");\n\n  const _component_el_input = _resolveComponent(\"el-input\");\n\n  const _component_el_form_item = _resolveComponent(\"el-form-item\");\n\n  const _component_el_form = _resolveComponent(\"el-form\");\n\n  const _component_el_dialog = _resolveComponent(\"el-dialog\");\n\n  const _directive_loading = _resolveDirective(\"loading\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\"    功能区域\"), _createCommentVNode(\"    <div style=\\\"margin: 10px 0\\\">\"), _createCommentVNode(\"      <el-button type=\\\"primary\\\" @click=\\\"add\\\" v-if=\\\"user.role === 1\\\">新增</el-button>\"), _createCommentVNode(\"    </div>\"), _createCommentVNode(\"    搜索区域\"), _createCommentVNode(\"    <div style=\\\"margin: 10px 0\\\">\"), _createCommentVNode(\"      <el-input v-model=\\\"search\\\" placeholder=\\\"请输入关键字\\\" style=\\\"width: 20%\\\" clearable></el-input>\"), _createCommentVNode(\"      <el-button type=\\\"primary\\\" style=\\\"margin-left: 5px\\\" @click=\\\"load\\\">查询</el-button>\"), _createCommentVNode(\"    </div>\"), _withDirectives((_openBlock(), _createBlock(_component_el_table, {\n    data: $data.tableData,\n    border: \"\",\n    stripe: \"\",\n    style: {\n      \"width\": \"100%\"\n    },\n    \"row-key\": \"id\",\n    \"default-expand-all\": \"\"\n  }, {\n    default: _withCtx(() => [_createCommentVNode(\"      <el-table-column\"), _createCommentVNode(\"          prop=\\\"id\\\"\"), _createCommentVNode(\"          label=\\\"ID\\\"\"), _createCommentVNode(\"          sortable\"), _createCommentVNode(\"      >\"), _createCommentVNode(\"      </el-table-column>\"), _createVNode(_component_el_table_column, {\n      prop: \"name\",\n      label: \"名称\"\n    }), _createVNode(_component_el_table_column, {\n      label: \"操作\"\n    }, {\n      default: _withCtx(scope => [$data.user.role === 1 ? (_openBlock(), _createBlock(_component_el_button, {\n        key: 0,\n        size: \"mini\",\n        onClick: $event => $options.handleEdit(scope.row)\n      }, {\n        default: _withCtx(() => [_hoisted_2]),\n        _: 2\n        /* DYNAMIC */\n\n      }, 1032\n      /* PROPS, DYNAMIC_SLOTS */\n      , [\"onClick\"])) : _createCommentVNode(\"v-if\", true), $data.user.role === 1 ? (_openBlock(), _createBlock(_component_el_popconfirm, {\n        key: 1,\n        title: \"确定删除吗？\",\n        onConfirm: $event => $options.handleDelete(scope.row.id)\n      }, {\n        reference: _withCtx(() => [_createVNode(_component_el_button, {\n          size: \"mini\",\n          type: \"danger\"\n        }, {\n          default: _withCtx(() => [_hoisted_3]),\n          _: 1\n          /* STABLE */\n\n        })]),\n        _: 2\n        /* DYNAMIC */\n\n      }, 1032\n      /* PROPS, DYNAMIC_SLOTS */\n      , [\"onConfirm\"])) : _createCommentVNode(\"v-if\", true)]),\n      _: 1\n      /* STABLE */\n\n    })]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"data\"])), [[_directive_loading, $data.loading]]), _createVNode(_component_el_card, {\n    style: {\n      \"margin\": \"10px 0\",\n      \"width\": \"50%\"\n    }\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_el_tree, {\n      data: $data.tableData,\n      props: $data.defaultProps,\n      \"show-checkbox\": \"\",\n      onCheckChange: $options.handleCheckChange,\n      \"node-key\": \"id\",\n      \"default-expanded-keys\": [1, 2],\n      \"default-checked-keys\": $data.checkedList\n    }, {\n      default: _withCtx(({\n        node,\n        data\n      }) => [_createElementVNode(\"span\", _hoisted_5, [_createElementVNode(\"span\", null, _toDisplayString(node.label), 1\n      /* TEXT */\n      ), _createElementVNode(\"span\", null, [_createElementVNode(\"a\", {\n        onClick: $event => $options.remove(node, data)\n      }, \" Delete \", 8\n      /* PROPS */\n      , _hoisted_6)])])]),\n      _: 1\n      /* STABLE */\n\n    }, 8\n    /* PROPS */\n    , [\"data\", \"props\", \"onCheckChange\", \"default-checked-keys\"])])]),\n    _: 1\n    /* STABLE */\n\n  }), _createVNode(_component_el_card, {\n    style: {\n      \"width\": \"50%\"\n    }\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_cascader, {\n      options: $data.options,\n      clearable: \"\",\n      onChange: $options.changeCas,\n      modelValue: $data.casdata,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.casdata = $event)\n    }, null, 8\n    /* PROPS */\n    , [\"options\", \"onChange\", \"modelValue\"])]),\n    _: 1\n    /* STABLE */\n\n  }), _createElementVNode(\"div\", _hoisted_7, [_createVNode(_component_el_dialog, {\n    title: \"提示\",\n    modelValue: $data.dialogVisible,\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.dialogVisible = $event),\n    width: \"30%\"\n  }, {\n    footer: _withCtx(() => [_createElementVNode(\"span\", _hoisted_8, [_createVNode(_component_el_button, {\n      onClick: _cache[2] || (_cache[2] = $event => $data.dialogVisible = false)\n    }, {\n      default: _withCtx(() => [_hoisted_9]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_el_button, {\n      type: \"primary\",\n      onClick: $options.save\n    }, {\n      default: _withCtx(() => [_hoisted_10]),\n      _: 1\n      /* STABLE */\n\n    }, 8\n    /* PROPS */\n    , [\"onClick\"])])]),\n    default: _withCtx(() => [_createVNode(_component_el_form, {\n      model: $data.form,\n      \"label-width\": \"120px\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_form_item, {\n        label: \"名称\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_el_input, {\n          modelValue: $data.form.name,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.form.name = $event),\n          style: {\n            \"width\": \"80%\"\n          }\n        }, null, 8\n        /* PROPS */\n        , [\"modelValue\"])]),\n        _: 1\n        /* STABLE */\n\n      })]),\n      _: 1\n      /* STABLE */\n\n    }, 8\n    /* PROPS */\n    , [\"model\"])]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"modelValue\"])])]);\n}","map":{"version":3,"mappings":"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","names":["style","class","_createElementBlock","_createCommentVNode","_createBlock","_component_el_table","data","$data","border","stripe","_createVNode","_component_el_table_column","prop","label","default","scope","role","_component_el_button","size","onClick","$options","row","_component_el_popconfirm","title","onConfirm","id","reference","type","_component_el_card","_createElementVNode","_component_el_tree","props","onCheckChange","node","_toDisplayString","_hoisted_6","_component_el_cascader","options","clearable","onChange","$event","_component_el_dialog","width","footer","_component_el_form","model","_component_el_form_item","_component_el_input","name"],"sourceRoot":"","sources":["D:\\Desktop\\springboot+vue\\springboot-vue-demo\\src\\views\\Category.vue"],"sourcesContent":["<template>\n  <div style=\"padding: 10px\">\n    <!--    功能区域-->\n<!--    <div style=\"margin: 10px 0\">-->\n<!--      <el-button type=\"primary\" @click=\"add\" v-if=\"user.role === 1\">新增</el-button>-->\n<!--    </div>-->\n\n    <!--    搜索区域-->\n<!--    <div style=\"margin: 10px 0\">-->\n<!--      <el-input v-model=\"search\" placeholder=\"请输入关键字\" style=\"width: 20%\" clearable></el-input>-->\n<!--      <el-button type=\"primary\" style=\"margin-left: 5px\" @click=\"load\">查询</el-button>-->\n<!--    </div>-->\n    <el-table\n        v-loading=\"loading\"\n        :data=\"tableData\"\n        border\n        stripe\n        style=\"width: 100%\"\n        row-key=\"id\"\n        default-expand-all\n    >\n<!--      <el-table-column-->\n<!--          prop=\"id\"-->\n<!--          label=\"ID\"-->\n<!--          sortable-->\n<!--      >-->\n<!--      </el-table-column>-->\n      <el-table-column\n          prop=\"name\"\n          label=\"名称\">\n      </el-table-column>\n      <el-table-column label=\"操作\">\n        <template #default=\"scope\">\n          <el-button size=\"mini\" @click=\"handleEdit(scope.row)\" v-if=\"user.role === 1\">编辑</el-button>\n          <el-popconfirm title=\"确定删除吗？\" @confirm=\"handleDelete(scope.row.id)\" v-if=\"user.role === 1\">\n            <template #reference>\n              <el-button size=\"mini\" type=\"danger\">删除</el-button>\n            </template>\n          </el-popconfirm>\n        </template>\n      </el-table-column>\n    </el-table>\n\n    <el-card style=\"margin: 10px 0; width: 50%\">\n      <div class=\"custom-tree-container\">\n        <el-tree :data=\"tableData\" :props=\"defaultProps\" show-checkbox\n                 @check-change=\"handleCheckChange\"\n                 node-key=\"id\"\n                 :default-expanded-keys=\"[1, 2]\"\n                 :default-checked-keys=\"checkedList\"\n        >\n          <template #default=\"{ node, data }\">\n        <span class=\"custom-tree-node\">\n          <span>{{ node.label }}</span>\n          <span>\n            <a\n                @click=\"remove(node, data)\">\n              Delete\n            </a>\n          </span>\n        </span>\n          </template>\n        </el-tree>\n      </div>\n    </el-card>\n\n    <el-card style=\"width: 50%\">\n      <el-cascader :options=\"options\" clearable @change=\"changeCas\" v-model=\"casdata\"></el-cascader>\n    </el-card>\n\n    <div style=\"margin: 10px 0\">\n      <el-dialog title=\"提示\" v-model=\"dialogVisible\" width=\"30%\">\n        <el-form :model=\"form\" label-width=\"120px\">\n          <el-form-item label=\"名称\">\n            <el-input v-model=\"form.name\" style=\"width: 80%\"></el-input>\n          </el-form-item>\n        </el-form>\n        <template #footer>\n          <span class=\"dialog-footer\">\n            <el-button @click=\"dialogVisible = false\">取 消</el-button>\n            <el-button type=\"primary\" @click=\"save\">确 定</el-button>\n          </span>\n        </template>\n      </el-dialog>\n\n    </div>\n  </div>\n</template>\n\n<script>\n\n\nimport request from \"@/utils/request\";\n\nexport default {\n  name: 'Category',\n  components: {\n\n  },\n  data() {\n    return {\n      user: {},\n      loading: true,\n      form: {},\n      dialogVisible: false,\n      search: '',\n      currentPage: 1,\n      pageSize: 10,\n      total: 0,\n      tableData: [],\n      casdata: ['Anhui', 'Hefei', 'Zhengwu'],\n      defaultProps: {\n        children: 'children',\n        label: 'name'\n      },\n      checkedList: [],\n      options: []\n    }\n  },\n\n// {\n//   value: 'Anhui',\n//       label: '安徽省',\n//     children: [\n//   {\n//     value: 'Hefei',\n//     label: '合肥市',\n//     children: [\n//       {\n//         value: 'Zhenwu',\n//         label: '政务区',\n//       },\n//     ],\n//   },\n//   {\n//     value: 'Wuhu',\n//     label: '芜湖市',\n//     children: [\n//       {\n//         value: 'Jinghu',\n//         label: '镜湖区',\n//       },\n//     ],\n//   }\n// ]\n// },\n// {\n//   value: 'Jiangsu',\n//       label: '江苏省',\n//     children: [\n//   {\n//     value: 'Nanjing',\n//     label: '南京市',\n//     children: [\n//       {\n//         value: 'Xuanwu',\n//         label: '玄武区',\n//       },\n//     ],\n//   }\n// ]\n// }\n  created() {\n    let userStr = sessionStorage.getItem(\"user\") || \"{}\"\n    this.user = JSON.parse(userStr)\n    // 请求服务端，确认当前登录用户的 合法信息\n    request.get(\"/user/\" + this.user.id).then(res => {\n      if (res.code === '0') {\n        this.user = res.data\n      }\n    })\n\n    request.get(\"/area/tree\").then(res => {\n      console.log(res.data)\n      this.options = res.data\n    })\n\n    this.load()\n  },\n  methods: {\n    changeCas(data) {\n      console.log(data)\n      console.log(this.casdata)\n    },\n    remove(node, data) {\n      request.delete(\"/category/\" + data.id).then(res => {\n        this.load()\n      })\n      // console.log(data)\n      // const parent = node.parent;\n      // const children = parent.data.children || parent.data;\n      // const index = children.findIndex(d => d.id === data.id);\n      // children.splice(index, 1);\n      // this.data = [...this.data]\n    },\n    handleCheckChange(data, checked, indeterminate) {\n      console.log(data.id);\n      console.log(data.name);\n    },\n    load() {\n      this.loading = true\n      request.get(\"/category\").then(res => {\n        this.loading = false\n        this.tableData = res.data\n\n        // 赋值选中的节点\n        let checkedData = [4];\n        this.checkedList = checkedData\n      })\n\n    },\n    add() {\n      this.dialogVisible = true\n      this.form = {}\n    },\n    save() {\n      if (this.form.id) {  // 更新\n        request.put(\"/category\", this.form).then(res => {\n          console.log(res)\n          if (res.code === '0') {\n            this.$message({\n              type: \"success\",\n              message: \"更新成功\"\n            })\n          } else {\n            this.$message({\n              type: \"error\",\n              message: res.msg\n            })\n          }\n          this.load() // 刷新表格的数据\n          this.dialogVisible = false  // 关闭弹窗\n        })\n      }  else {  // 新增\n        request.post(\"/category\", this.form).then(res => {\n          console.log(res)\n          if (res.code === '0') {\n            this.$message({\n              type: \"success\",\n              message: \"新增成功\"\n            })\n          } else {\n            this.$message({\n              type: \"error\",\n              message: res.msg\n            })\n          }\n\n          this.load() // 刷新表格的数据\n          this.dialogVisible = false  // 关闭弹窗\n        })\n      }\n    },\n    handleEdit(row) {\n      this.form = JSON.parse(JSON.stringify(row))\n      this.dialogVisible = true\n\n    },\n    handleDelete(id) {\n      console.log(id)\n      request.delete(\"/category/\" + id).then(res => {\n        if (res.code === '0') {\n          this.$message({\n            type: \"success\",\n            message: \"删除成功\"\n          })\n        } else {\n          this.$message({\n            type: \"error\",\n            message: res.msg\n          })\n        }\n        this.load()  // 删除之后重新加载表格的数据\n      })\n    },\n    handleSizeChange(pageSize) {   // 改变当前每页的个数触发\n      this.pageSize = pageSize\n      this.load()\n    },\n    handleCurrentChange(pageNum) {  // 改变当前页码触发\n      this.currentPage = pageNum\n      this.load()\n    }\n  }\n}\n</script>\n<style>\n.custom-tree-node {\n  flex: 1;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: 14px;\n  padding-right: 8px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}